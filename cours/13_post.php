<!-- MAUVAISE PRATIQUE : Utiliser des paramÃ¨tres d'URL avec POST -->

<form action="process.php?id=123&action=submit" method="POST">
    <label for="name">Nom :</label>
    <input type="text" name="name" id="name" required>
    <input type="submit" value="Envoyer">
</form>

<?php
// process.php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // AccÃ¨s aux donnÃ©es de l'URL (mauvaise pratique)
    $id = $_GET['id'];  // Les donnÃ©es sensibles peuvent Ãªtre visibles dans l'URL
    $action = $_GET['action'];

    // AccÃ¨s aux donnÃ©es POST
    $name = $_POST['name'];

    echo "ID: $id<br>";
    echo "Action: $action<br>";
    echo "Nom: $name<br>";
}
?>

<!--  
    ProblÃ¨mes ici ðŸ”¼
        - Les paramÃ¨tres id et action sont passÃ©s via l'URL ($_GET), bien que la mÃ©thode soit POST. Ces donnÃ©es peuvent Ãªtre modifiÃ©es facilement ou exposÃ©es dans l'historique du navigateur.
        - Cela introduit des risques de sÃ©curitÃ©, surtout si des informations sensibles sont transmises.
-->

<!-- ********************************************************************************************************** -->

<!-- BONNE PRATIQUE : Envoyer toutes les donnÃ©es via POST -->

<form action="process.php" method="POST">
    <input type="hidden" name="id" value="123"> <!-- Utilisation de champs cachÃ©s -->
    <input type="hidden" name="action" value="submit">

    <label for="name">Nom :</label>
    <input type="text" name="name" id="name" required>
    <input type="submit" value="Envoyer">
</form>

<?php
// process.php
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // AccÃ¨s sÃ©curisÃ© aux donnÃ©es POST
    $id = $_POST['id'];
    $action = $_POST['action'];
    $name = $_POST['name'];

    echo "ID: $id<br>";
    echo "Action: $action<br>";
    echo "Nom: $name<br>";
}
?>

<!--  
    Bonnes pratiques ici ðŸ”¼
        - Les donnÃ©es sont envoyÃ©es via le corps de la requÃªte POST, ce qui les rend invisibles dans l'URL.
        - L'utilisation de champs cachÃ©s (<input type="hidden">) permet de passer des informations non visibles Ã  l'utilisateur mais disponibles pour le traitement cÃ´tÃ© serveur. (l'autre moyen serait de passer par les SESSION. Ã€ voir plus tard)
        - Cela rÃ©duit l'exposition aux risques de sÃ©curitÃ© et garantit que les donnÃ©es ne sont pas mises en cache ou modifiÃ©es via l'URL.

-->
